@page "/assets/add"

@inherits UpsertAssetPage

<ExpandablePage
    HeaderCssClass="mx-3 ojeda-form"
    ContentCssClass="px-3"
    FooterCssClass="mx-3 ojeda-form">

    <Header>
        <PageHeader Title="Add Asset"/>
    </Header>

    <Content>

        @if (_error != null)
        {
            <p class="text-danger fst-italic">@_error</p>
            <a href="/assets">Return to Assets</a>
        }
        else if (_isLoading)
        {
            <p class="text-muted fst-italic">Loading...</p>
        }
        else
        {
            <EditForm id="form-add-asset" EditContext="_editContext" OnValidSubmit="OnSubmitForm">

                <AssetFluentValidationValidator Asset="@Asset"/>
                <ServerSideFluentValidation @ref="_serverValidation"/>

                <div class="ojeda-form">

                    <!-- Header -->
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-4 d-flex align-items-center justify-content-center">

                                    <!-- Image -->
                                    <div class="image bg-light d-flex align-items-center justify-content-center">
                                        <i class="fs-6 bi-box" style="font-size: 90px !important; color: rgba(206, 212, 218, 0.5);"></i>
                                    </div>

                                </div>
                                <div class="col-8">

                                    <!-- Type -->
                                    <OjedaFormField ForId="field-type" Label="Type" IsRequired="false">
                                        <input
                                            class="form-control"
                                            id="field-type"
                                            value="@Asset.AssetType.Name"
                                            disabled/>
                                    </OjedaFormField>

                                    <!-- Name -->
                                    <OjedaFormField ForId="field-name" Label="Name" IsRequired="true" ValidateFor="@(() => _createAsset.Name)">
                                        <OjedaInputText @bind-Value="_createAsset.Name" class="form-control" id="field-name" disabled="@_isSubmitting"/>
                                    </OjedaFormField>

                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Field Sets -->
                    @for(var i = 0; i < _createAsset.FieldSets.Count; i++)
                    {
                        var fieldSet = _createAsset.FieldSets[i];
                        
                        var formSectionClass = "mb-3";

                        if (i == 0 && _createAsset.FieldSets.Count == 1)
                        {
                            formSectionClass = "mt-3";
                        }
                        else if (i == 0)
                        {
                            formSectionClass = "my-3";
                        }
                        else if (i == _createAsset.FieldSets.Count - 1)
                        {
                            formSectionClass = "";
                        }

                        <FormSection Title="@(GetFieldSetName(fieldSet.Id))" HelpText="@(GetFieldSetDescription(fieldSet.Id))" CssClass="@formSectionClass">
                            @foreach (var field in fieldSet.Fields)
                            {
                                var hash = $"{fieldSet.Id}-{field.Id}".ToShortHash();

                                <div class="mb-3">
                                    <label for="@hash" class="form-label">@(GetFieldLabel(fieldSet.Id, field.Id))</label>

                                    @{
                                        var fieldDataType = GetFieldDataType(fieldSet.Id, field.Id);
                                    }

                                    @if (fieldDataType == FieldDataTypeDto.String)
                                    {
                                        var fieldData = (StringFieldDataDto)field.Data;

                                        <OjedaInputText @bind-Value="fieldData.Value" class="form-control" id="@hash" disabled="@_isSubmitting"
                                                        placeholder="@(GetFieldDescription(fieldSet.Id, field.Id))"/>

                                        <ValidationMessage For="@(() => fieldData.Value)"></ValidationMessage>
                                    }

                                    @if (fieldDataType == FieldDataTypeDto.Long)
                                    {
                                        var fieldData = (LongFieldDataDto)field.Data;

                                        <OjedaInputNumber @bind-Value="fieldData.Value"
                                                          ParsingErrorMessage="Value must be integer."
                                                          class="form-control" id="@hash" disabled="@_isSubmitting"
                                                          placeholder="@(GetFieldDescription(fieldSet.Id, field.Id))"/>

                                        <ValidationMessage For="@(() => fieldData.Value)"></ValidationMessage>
                                    }

                                    @if (fieldDataType == FieldDataTypeDto.Double)
                                    {
                                        var fieldData = (DoubleFieldDataDto)field.Data;

                                        <OjedaInputNumber @bind-Value="fieldData.Value" class="form-control" id="@hash" disabled="@_isSubmitting"
                                                          placeholder="@(GetFieldDescription(fieldSet.Id, field.Id))"/>

                                        <ValidationMessage For="@(() => fieldData.Value)"></ValidationMessage>
                                    }
                                </div>
                            }
                        </FormSection>
                    }

                </div>

            </EditForm>
        }

    </Content>

    <Footer>

        <OjedaFormFooter
            CssClass="my-3"
            Alignment="@FormFooterAlignment.End"
            Form="form-add-asset"
            IsSubmitting="@_isSubmitting"
            OnCancel="@OnCancel"
            OnReset="@OnReset"/>

    </Footer>

</ExpandablePage>


@code {

    private CreateAssetDto _createAsset = new();

    private EditContext _editContext;

    private ServerSideFluentValidation _serverValidation;

    private bool _isLoading;
    private bool _isSubmitting;
    private string _error;

    protected override async Task OnInitializedAsync()
    {
        NavManager.TryGetQueryString<string>("assetTypeId", out var assetTypeId);

        await GetAssetType(assetTypeId);
    }

    private async Task OnSubmitForm()
    {
        if (_isSubmitting)
        {
            return;
        }

        _isSubmitting = true;
        _serverValidation.ClearErrors();

        var result = await Ojeda.AssetsService.CreateAsync(_createAsset);

        if (result.StatusCode == HttpStatusCode.BadRequest && result.Error.ValidationErrors.Any())
        {
            _serverValidation.DisplayErrors(result.Error.ValidationErrors);
        }
        else if (!result.Success)
        {
            ToastService.ShowError($"Could not submit asset. {result.Error?.Message} ({result.Error?.Code}).");
        }
        else
        {
            var asset = result.Data;
            NavManager.NavigateTo($"/assets/{asset.Id}");
        }

        _isSubmitting = false;
    }

    private void OnCancel()
    {
        if (_isSubmitting)
        {
            return;
        }

        NavManager.NavigateTo("/assets");
    }

    private void OnReset()
    {
        if (_isSubmitting)
        {
            return;
        }

        Init();
    }

    private async Task GetAssetType(string assetTypeId)
    {
        if (string.IsNullOrEmpty(assetTypeId))
        {
            _error = "Cannot load asset: asset type id is missing.";
            return;
        }

        _isLoading = true;

        var result = await Ojeda.AssetsService.GetByAssetType(assetTypeId);

        if (result.Success)
        {
            _error = null;
            Asset = result.Data;

            Init();
        }
        else if (result.StatusCode == HttpStatusCode.NotFound)
        {
            _error = "Cannot load asset: asset type does not exist.";
        }
        else
        {
            ToastService.ShowError( result.Error.Stringify("Could not load asset type."));
            NavManager.NavigateTo("/assets");
        }

        _isLoading = false;
    }

    private void Init()
    {
        _createAsset = new CreateAssetDto
        {
            AssetTypeId = Asset.AssetType.Id,
            FieldSets = Asset.FieldSets.Select(fs => new CreateAssetFieldSetDto
            {
                Id = fs.Id,
                Fields = fs.Fields.Select(f => new CreateAssetFieldDto
                {
                    Id = f.Id,
                    Data = f.Data.Copy()
                }).ToList()
            }).ToList()
        };

        _editContext = new EditContext(_createAsset);
        _editContext.SetFieldCssClassProvider(new BootstrapCssClassProvider());
    }

}
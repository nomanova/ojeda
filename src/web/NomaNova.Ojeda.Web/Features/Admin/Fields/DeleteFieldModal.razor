@using System.Text
@inherits DryRunDeleteItemModal<DryRunDeleteFieldDto>

@inject OjedaClient _ojeda

<ActionModalTemplate
    Text="@Text"
    IsLoading="@IsLoading"
    IsDisabled="@IsDisabled"
    Error="@Error"
    ActionCallBack="@OnDeleteAsync"
    CancelCallBack="@OnCancelAsync"/>

@code {

    protected override async Task<OjedaResult> DeleteAsync()
    {
        return await _ojeda.FieldsService.DeleteAsync(Id);
    }

    protected override async Task<OjedaDataResult<DryRunDeleteFieldDto>> DryRunDeleteAsync()
    {
        return await _ojeda.FieldsService.DryRunDeleteAsync(Id);
    }

    protected override string GetText(DryRunDeleteFieldDto data)
    {
        var text = new StringBuilder();

        text.AppendLine($"<p>Are you sure you want to delete field '<b>{Name}</b>'?</p>");

        if (data.FieldSets.Count > 0)
        {
            text.AppendLine(data.Assets.Count == 1 ?
                "<p>This field will be removed from <b>1 field set</b>.</p>" :
                $"<p>This field will be removed from <b>{data.FieldSets.Count} field sets</b>.</p>");
        }

        if (data.Assets.Count > 0)
        {
            text.AppendLine(data.Assets.Count == 1 ? 
                "<p>There is <b>1 impacted asset</b>.</p>" : 
                $"<p>There are <b>{data.Assets.Count} impacted assets</b>.</p>");
        
            text.AppendLine("<p>All linked field values will be <b>irreversibly deleted</b>.</p>");
        }

        return text.ToString();
    }

}
@page "/admin/asset-id-types/add"
@layout AdminLayout
@inherits AssetIdTypePage

<ExpandablePage
    HeaderCssClass="mx-3 pt-3 ojeda-form"
    ContentCssClass="px-3"
    FooterCssClass="mx-3 ojeda-form">

    <Header>

        <OjedaBreadcrumb Data="@_breadcrumbItems"/>
        <PageHeader Title="Add Asset Id Type"/>

    </Header>

    <Content>

        <EditForm id="form-add-id-type" EditContext="EditContext" OnValidSubmit="OnSubmitForm">

            <FluentValidationValidator DisableAssemblyScanning="@true"/>
            <ServerSideFluentValidation @ref="ServerValidation"/>

            <div class="ojeda-form">

                <FormSection Title="General" CssClass="mb-3">

                    <!-- Name -->
                    <OjedaFormField ForId="id-type-name" Label="Name" IsRequired="true" ValidateFor="@(() => _createAssetIdType.Name)">
                        <OjedaInputText @bind-Value="_createAssetIdType.Name" class="form-control" id="id-type-name" disabled="@IsSubmitting"/>
                    </OjedaFormField>

                    <!-- Description -->
                    <OjedaFormField ForId="id-type-description" Label="Description" ValidateFor="@(() => _createAssetIdType.Description)">
                        <OjedaInputText @bind-Value="_createAssetIdType.Description" class="form-control" id="id-type-description" disabled="@IsSubmitting"/>
                    </OjedaFormField>

                </FormSection>

                <FormSection Title="Properties">

                    <!-- Symbology -->
                    <OjedaFormField 
                        ForId="id-type-symbology" 
                        Label="Symbology" 
                        HelpText="The symbology defines the available character set and length of the id, and often its visualization as a label." 
                        IsRequired="true">
                        
                        <InputSelect @bind-Value="_createAssetIdType.Properties.Symbology" @oninput="OnSymbologyChange" class="form-control" id="id-type-symbology" disabled="@IsSubmitting">
                            @foreach (var symbology in Enum.GetValues(typeof(SymbologyDto)))
                            {
                                <option value="@symbology">@(symbology.ToString()?.ToUpperInvariant())</option>
                            }
                        </InputSelect>

                    </OjedaFormField>

                    <!-- Allow Manual Entry -->
                    <div class="form-check form-switch mb-3">
                        <InputCheckbox @bind-Value="_createAssetIdType.WithManualEntry" class="form-check-input" disabled="@IsSubmitting" id="id-type-withManualEntry"/>
                      <label class="form-check-label" for="id-type-withManualEntry">Allow manual entry</label>
                      <div class="form-text">When deselected, asset id's of this type are always generated by the system.</div>
                      <ValidationMessage For="@(() => _createAssetIdType.WithManualEntry)"></ValidationMessage>
                    </div>
                    
                </FormSection>

            </div>

        </EditForm>

    </Content>

    <Footer>

        <OjedaFormFooter
            CssClass="my-3"
            Alignment="@FormFooterAlignment.End"
            Form="form-add-id-type"
            IsSubmitting="@IsSubmitting"
            OnCancel="@OnCancel"
            OnReset="@OnReset"/>

    </Footer>

</ExpandablePage>

@code {

    private readonly ICollection<BreadcrumbItem> _breadcrumbItems = new List<BreadcrumbItem>
    {
        new() { Text = "Admin", Url = "/admin" },
        new() { Text = "Asset Id Types", Url = "/admin/asset-id-types" },
        new() { Text = "Add" }
    };

    protected override string ReturnPath => "/admin/asset-id-types";

    private CreateAssetIdTypeDto _createAssetIdType;

    protected override void OnInitialized()
    {
        Init();
    }

    protected override async Task<OjedaDataResult<AssetIdTypeDto>> OnSubmitEntity()
    {
        return await Ojeda.AssetIdTypesService.CreateAsync(_createAssetIdType);
    }

    protected override void Init()
    {
        _createAssetIdType = new CreateAssetIdTypeDto
        {
            Properties = new Ean13SymbologyPropertiesDto()
        };

        EditContext = new EditContext(_createAssetIdType);
        EditContext.SetFieldCssClassProvider(new BootstrapCssClassProvider());
    }

    protected override void SetSymbologyProperties(SymbologyPropertiesDto symbologyProperties)
    {
        _createAssetIdType.Properties = symbologyProperties;
    }

}
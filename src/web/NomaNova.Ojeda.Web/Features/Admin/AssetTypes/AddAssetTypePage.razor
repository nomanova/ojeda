@page "/admin/asset-types/add"
@layout AdminLayout
@inherits AssetTypePage<CreateAssetTypeDto, CreateAssetTypeFieldSetDto>

<OjedaBreadcrumb Data="@_breadcrumbItems" />

<h3 class="mb-3">Add Asset Type</h3>

<EditForm EditContext="EditContext" OnValidSubmit="OnSubmitForm">

    <FluentValidationValidator Validator="@(new CreateAssetTypeDtoFieldValidator())" />
    <ServerSideFluentValidation @ref="ServerValidation" />
    
    <div class="ojeda-form mb-4">
    
        <FormSection Title="General">
        
        <!-- Name -->
        <OjedaFormField ForId="assettype-name" Label="Name" IsRequired="true" ValidateFor="@(() => UpsertAssetType.Name)">
            <OjedaInputText @bind-Value="UpsertAssetType.Name" class="form-control" id="assettype-name" disabled="@IsSubmitting"/>
        </OjedaFormField>

        <!-- Description -->
        <OjedaFormField ForId="assettype-description" Label="Description" ValidateFor="@(() => UpsertAssetType.Description)">
            <OjedaInputText @bind-Value="UpsertAssetType.Description" class="form-control" id="assettype-description" disabled="@IsSubmitting"/>
        </OjedaFormField>

        </FormSection>
        
        <FormSection Title="Field Sets">
        
        <!-- Field Sets -->
        <div class="mb-3">
            <div class="d-flex justify-content-between">
                <label class="form-label">Field Sets*</label>
                <a class="btn-link @(IsSubmitting ? "disabled" : "")" role="button" @onclick="@OnAddFieldSet">Add Field Set</a>
            </div>
            <div>
                @if (UpsertAssetType.FieldSets?.Count > 0)
                {
                    <table class="table">
                        <thead>
                        <tr>
                            <th class="py-2" colspan="2">Order</th>
                            <th class="py-2">Name</th>
                            <th class="py-2">Delete</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var assetTypeFieldSet in UpsertAssetType.FieldSets.OrderBy(f => f.Order))
                        {
                            <tr>
                                <td class="pb-2 pr-0">
                                    <ItemOrderHandler Type="@OrderType.Up" 
                                                      IsEnabled="@(assetTypeFieldSet.Order != 1 && UpsertAssetType.FieldSets.Count > 1)"
                                                      OnClick="@(() => OnMoveItemUp(assetTypeFieldSet))" />
                                </td>
                                <td class="pb-2 pr-0">
                                    <ItemOrderHandler Type="@OrderType.Down" 
                                                      IsEnabled="@(assetTypeFieldSet.Order != UpsertAssetType.FieldSets.Count && UpsertAssetType.FieldSets.Count > 1)"
                                                      OnClick="@(() => OnMoveItemDown(assetTypeFieldSet))" />
                                </td>
                                <td class="pb-2 pr-3">@(GetFieldSetName(assetTypeFieldSet.Id))</td>
                                <td class="pb-2 pr-3">
                                    <ItemDeleteHandler OnClick="@(() => OnRemoveItem(assetTypeFieldSet))" />
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted fst-italic">Use the link on the right to start adding field sets.</p>
                }
                <ValidationMessage For="@(() => UpsertAssetType.FieldSets)"></ValidationMessage>
            </div>
        </div>
    
        </FormSection>
        
    </div>
    
    <OjedaFormFooter
        IsSubmitting="@IsSubmitting"
        OnCancel="@OnCancel"
        OnReset="@OnReset"/>

</EditForm>

@code {
    
    private readonly ICollection<BreadcrumbItem> _breadcrumbItems = new List<BreadcrumbItem>
    {
        new () {Text = "Admin", Url = "/admin"},
        new () {Text = "Asset Types", Url = "/admin/asset-types"},
        new () {Text = "Add"}
    };
    
    protected override CreateAssetTypeDto UpsertAssetType { get; set; }
    
    protected override void OnInitialized()
    {
        Init();
    }

    protected override async Task<OjedaDataResult<AssetTypeDto>> OnSubmitEntity()
    {
        return await Ojeda.AssetTypesService.CreateAsync(UpsertAssetType);
    }
    
    protected override void Init()
    {
        UpsertAssetType = new CreateAssetTypeDto
        {
            FieldSets = new List<CreateAssetTypeFieldSetDto>()
        };
        FieldSets = new List<FieldSetSummaryDto>();

        EditContext = new EditContext(UpsertAssetType);
        EditContext.SetFieldCssClassProvider(new BootstrapCssClassProvider());
    }
    
}